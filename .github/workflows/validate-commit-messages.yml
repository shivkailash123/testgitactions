name: Validate Commit Messages

on:
  pull_request:
    types: [opened, synchronize, reopened]
  push:
    branches: [ '**' ] # Add other branches as needed

jobs:
  validate-commits:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Validate commit messages
        run: |
          # Get the commits to validate (either PR commits or push commits)
          if [ "${{ github.event_name }}" == "pull_request" ]; then
            COMMITS=$(git log --format=%H ${{ github.event.pull_request.base.sha }}..${{ github.event.pull_request.head.sha }})
          else
            # For push events, get the most recent commits (adjust number as needed)
            COMMITS=$(git log --format=%H -n 10)
          fi
          
          # Define the JIRA ID pattern (e.g., PROJECT-123)
          JIRA_PATTERN="^[A-Z]+-[0-9]+"
          
          # Validate each commit
          for COMMIT in $COMMITS; do
            MESSAGE=$(git log --format=%B -n 1 $COMMIT)
            if ! [[ $MESSAGE =~ $JIRA_PATTERN ]]; then
              echo "Invalid commit message: $MESSAGE"
              echo "Commit messages must start with a JIRA ID (e.g., PROJECT-123)"
              exit 1
            fi
          done
          
          echo "All commit messages are valid!"